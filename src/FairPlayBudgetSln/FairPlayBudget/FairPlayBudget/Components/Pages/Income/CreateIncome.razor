@attribute [Route(FairPlayBudget.Common.Constants.AppRoutes.CreateIncome)]
@attribute [Authorize]
@using FairPlayBudget.Interfaces.Services
@using FairPlayBudget.Models.Income
@using Microsoft.AspNetCore.Authorization
<PageTitle>
    @nameof(Common.Constants.AppRoutes.CreateIncome)
</PageTitle>

<h3>
    @nameof(Common.Constants.AppRoutes.CreateIncome)
</h3>


@if (this.createIncomeModel != null)
{

    <EditForm FormName="frmCreateIncome" Model="@this.createIncomeModel" OnValidSubmit="OnValidSubmitAsync">
        <div class="mb-3">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>
        </div>
        <div class="mb-3">
            <label class="form-label">@nameof(CreateIncomeModel.AmountInUsd)</label>
            <InputNumber class="form-control" @bind-Value="@this.createIncomeModel.AmountInUsd"></InputNumber>
        </div>
        <div class="mb-3">
            <label class="form-label">@nameof(CreateIncomeModel.Description)</label>
            <InputText class="form-control" @bind-Value="@this.createIncomeModel.Description"></InputText>
        </div>
        <div class="mb-3">
            <label class="form-label">@nameof(CreateIncomeModel.IncomeDateTime)</label>
            <InputDate class="form-control" @bind-Value="@this.createIncomeModel.IncomeDateTime"></InputDate>
        </div>
        <div class="mb-3">
            <button class="btn btn-primary" type="submit">Save</button>
        </div>
    </EditForm>
}

@code {
    [SupplyParameterFromForm]
    private CreateIncomeModel? createIncomeModel { get; set; }
    [Inject]
    private IIncomeService? IncomeService { get; set; }
    [Inject]
    private NavigationManager? NavigationManager { get; set; }

    protected override void OnInitialized()
    {
        this.createIncomeModel ??= new();
    }

    private async Task OnValidSubmitAsync()
    {
        await Task.Yield();
        await this.IncomeService!.CreateIncomeAsync(this.createIncomeModel!,
        CancellationToken.None);
        this.NavigationManager!.NavigateTo("/");
    }
}
